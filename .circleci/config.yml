version: '2.1'
executors:
  php:
    docker:
      - image: php:7.4-cli-alpine
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: api-platform
          POSTGRES_DB: api_test
          POSTGRES_PASSWORD: ChangeMe
    working_directory: ~/repo

jobs:
  composer:
    executor: php
    steps:
      - run:
          name: Install alpine requirements for checkout
          command: apk add git openssh-client curl
      - checkout
      - restore_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-all
      - run:
          name: composer
          command: |
            if [[ ! -f vendor/autoload.php ]]; then
                curl https://getcomposer.org/composer.phar --location --silent  --output /usr/bin/composer; \
                chmod +x /usr/bin/composer; \
                composer self-update
                composer global require hirak/prestissimo; \
                composer install --no-progress --no-interaction; \
            fi
      - save_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-all
          paths:
            - ./vendor
      - persist_to_workspace:
          root: .
          paths:
            - vendor

#  sonar:
#    steps:
#      - checkout
#      - sonarcloud/scan

  phpstancs:
    executor: php
    steps:
      - run:
          name: Install alpine requirements for checkout
          command: apk add git openssh-client curl
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Cache warmup
          command: bin/console cache:warmup -e dev
      - run:
          name: phpstan
          command: vendor/bin/phpstan
      - run:
          name: phpcs
          command: vendor/bin/phpcs

  phpunit:
    executor: php
    steps:
      - run:
          name: Install alpine requirements for checkout.
          command: apk add git openssh-client curl
      - checkout
      - run:
          name: Install PostgreSQL client tools
          command: |
              apk add php-pdo_pgsql
              apk add postgresql-dev
              docker-php-ext-install pdo pdo_pgsql
      - attach_workspace:
          at: .
      - run:
          name: Cache warmup
          command: bin/console cache:warmup -e test
      - run:
          name: phpunit
          command: |
              curl https://getcomposer.org/composer.phar --location --silent  --output /usr/bin/composer; \
              chmod +x /usr/bin/composer; \
              composer self-update; \
              vendor/bin/simple-phpunit
          environment:
            DATABASE_URL: postgres://api-platform:ChangeMe@localhost:5432/api_test

#orbs:
#    sonarcloud: sonarsource/sonarcloud@1.0.1

workflows:
  version: '2.1'
  Code quality:
    jobs:
      - composer
      - phpstancs:
          requires:
            - composer
      - phpunit:
          requires:
            - composer
#      - sonar:
#          context: SonarCloud